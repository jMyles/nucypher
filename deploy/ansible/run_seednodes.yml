- name: "Start Ursulas"
  hosts: "{{ 'tag_Role_' + lookup('env', 'NUCYPHER_NETWORK_NAME') }}"
  user: ubuntu
  gather_facts: false

  pre_tasks:
    - name: "Install Python2.7 for Ansible Control"
      raw: sudo apt -y update && sudo apt install -y python2.7-minimal python2.7-setuptools
    - include_vars: "{{ lookup('env', 'ANSIBLE_SEEDNODE_VARIABLES') }}"

  tasks:
    - name: "Install System Dependencies"
      become: yes
      become_flags: "-H -S"
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
        - python-pip
        - python3
        - python3-pip
        - python3-dev
        - python3-setuptools
        - libffi-dev

    - name: "Install Pipenv"
      become: yes
      become_flags: "-H -S"
      shell: pip3 install pipenv

    - name: "Create custom fact directory"
      become: yes
      become_flags: "-H -S"
      file:
        path: "/etc/ansible/facts.d"
        state: "directory"
        mode: 0755

    - git:
        repo: "{{ git_repo }}"
        dest: ./code
        version: "{{ git_version }}"

    - name: "Install Python Dependencies via Pipenv"
      shell: "pipenv install --three --dev --pre --skip-lock"
      args:
        chdir: ./code
      environment:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8

    - name: "Generate Ursula passphrase"
      shell: head -c 32 /dev/urandom | sha256sum
      register: ursula_passphrase

    - name: "Configure Ursula"
      shell: "pipenv run nucypher configure install --rest-host {{inventory_hostname}}"
      args:
        chdir: ./code
      vars:
        ansible_python_interpreter: /usr/bin/python3
      environment:
        NUCYPHER_KEYRING_PASSPHRASE: "{{ ursula_passphrase.stdout }}"
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      ignore_errors: yes
      register: configure_ursula_output

    - name: "Get Ursula Seed Node Config (and more)"
      slurp:
        src: "~/.local/share/nucypher/ursula.config"
      register: ursula_seed_node_config
      run_once: true

    - name: "Set Ursula Seed Node Fact"
      set_fact:
        seed_node_metadata: "{{ ursula_seed_node_config['content'] | b64decode }}"

    - name: "Get Ursula env dir"
      shell: "pipenv --venv"
      args:
        chdir: ./code
      environment:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      register: env_dir

    - name: "Open Ursula node port"
      become: yes
      become_flags: "-H -S"
      shell: 'iptables -A INPUT -p tcp -m conntrack --dport {{ seed_node_metadata.rest_port }} --ctstate NEW,ESTABLISHED -j ACCEPT'

    - name: "Register Firstula Service"
      become: yes
      become_flags: "-H -S"
      template:
        src: ../services/firstula_node.j2
        dest: /etc/systemd/system/ursula_node.service
        mode: 0755
      when: '"existing" not in configure_ursula_output.stdout'
      run_once: true

    - name: "Register Subsequent Ursulas"
      become: yes
      become_flags: "-H -S"
      template:
        src: ../services/ursula_node.j2
        dest: /etc/systemd/system/ursula_node.service
        mode: 0755
      when:
        - '"existing" not in configure_ursula_output.stdout'
        - inventory_hostname != seed_node_metadata.rest_host

    - name: "Enable and Start Ursula Service"
      become: yes
      become_flags: "-H -S"
      systemd:
        daemon_reload: yes
        no_block: yes
        enabled: yes
        state: restarted
        name: "ursula_node"
